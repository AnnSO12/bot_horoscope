import telebot
from telebot.types import ReplyKeyboardMarkup
import datetime

bot = telebot.TeleBot("")
dd = 0
mm = 0
yy = 0

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.row("üîÆ –û–±—ã—á–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø", "üíº –†–∞–±–æ—á–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø")
keyboard.row("‚ù§Ô∏è –õ—é–±–æ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø", "üê∫ –¢–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ")
keyboard.row("üßÆ –ê–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ", "üë©‚Äç‚ù§Ô∏è‚Äçüë® –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")


def d_in_y(day: int, month: int):
    if (
            month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12) and 1 <= day <= 31:
        return True
    elif (month == 4 or month == 6 or month == 9 or month == 11) and 1 <= day <= 30:
        return True
    elif month == 2 and 1 <= day <= 28:
        return True
    else:
        return False


# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
def get_zodiac_sign(day: int, month: int) -> str:
    if (month == 12 and day >= 22) or (month == 1 and day <= 20):
        return "–ö–æ–∑–µ—Ä–æ–≥"
    elif (month == 1 and day >= 21) or (month == 2 and day <= 18):
        return "–í–æ–¥–æ–ª–µ–π"
    elif (month == 2 and day >= 19) or (month == 3 and day <= 20):
        return "–†—ã–±—ã"
    elif (month == 3 and day >= 21) or (month == 4 and day <= 20):
        return "–û–≤–µ–Ω"
    elif (month == 4 and day >= 21) or (month == 5 and day <= 21):
        return "–¢–µ–ª–µ—Ü"
    elif (month == 5 and day >= 22) or (month == 6 and day <= 21):
        return "–ë–ª–∏–∑–Ω–µ—Ü—ã"
    elif (month == 6 and day >= 22) or (month == 7 and day <= 22):
        return "–†–∞–∫"
    elif (month == 7 and day >= 23) or (month == 8 and day <= 23):
        return "–õ–µ–≤"
    elif (month == 8 and day >= 24) or (month == 9 and day <= 23):
        return "–î–µ–≤–∞"
    elif (month == 9 and day >= 24) or (month == 10 and day <= 23):
        return "–í–µ—Å—ã"
    elif (month == 10 and day >= 24) or (month == 11 and day <= 22):
        return "–°–∫–æ—Ä–ø–∏–æ–Ω"
    elif (month == 11 and day >= 23) or (month == 12 and day <= 22):
        return "sagittarius"  # –°—Ç—Ä–µ–ª–µ—Ü
    else:
        return "error"


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,
                     "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø. –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14.05.2006)")


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global dd, mm, yy
    try:
        if message.text in ["üîÆ –û–±—ã—á–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø", "üíº –†–∞–±–æ—á–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø",
                            "‚ù§Ô∏è –õ—é–±–æ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø", "üê∫ –¢–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ",
                            "üßÆ –ê–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ", "üë©‚Äç‚ù§Ô∏è‚Äçüë® –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å"]:
            handle_choice(message)
            return

        if '.' in message.text:
            parts = message.text.strip().split('.')
            if len(parts) == 3:
                day, month, year = map(int, parts)
                if 1 <= day <= 31 and 1 <= month <= 12 and 1900 <= year <= datetime.datetime.now().year:
                    sign = get_zodiac_sign(day, month)
                    if sign != "error":
                        dd, mm, yy = day, month, year
                        bot.send_message(message.chat.id, f"‚ú® –í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: {sign}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                                         reply_markup=keyboard)

                    else:
                        bot.send_message(message.chat.id, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è")
                else:
                    bot.send_message(message.chat.id,
                                     "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì(–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.09.2006)")
                return
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì(–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.09.2006)")
    except Exception as e:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")
        print(e)


def handle_choice(message):
    choice = message.text
    response = "üîÆ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

    if choice == "üê∫ –¢–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ":
        response = "üê∫–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –≤–æ–ª–∫"
    elif "–≥–æ—Ä–æ—Å–∫–æ–ø" in choice:
        response = "‚≠ê –°–µ–≥–æ–¥–Ω—è –≤–∞—Å –∂–¥—É—Ç –ø—Ä–∏—è—Ç–Ω—ã–µ —Å—é—Ä–ø—Ä–∏–∑—ã!"
    elif choice == "üßÆ –ê–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ":
        response = "–í–∞—à–µ –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ 444"
    elif choice == "üë©‚Äç‚ù§Ô∏è‚Äçüë® –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å":
        response = "‚ù§Ô∏è‚Äçüî• –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: 78% —Å –í–æ–¥–æ–ª–µ—è–º–∏, 65% —Å –¢–µ–ª—å—Ü–∞–º–∏"

    bot.send_message(message.chat.id, response)


if __name__ == '__main__':
    bot.infinity_polling()
